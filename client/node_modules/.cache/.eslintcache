[{"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/index.js":"1","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/App.js":"2","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/store.js":"3","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/actions/auth.js":"4","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/utils/setAuthToken.js":"5","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Layout/Navbar.js":"6","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Layout/Alert.js":"7","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Layout/Landing.js":"8","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Auth/Login.js":"9","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Auth/Register.js":"10","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Profile-forms/CreateProfile.js":"11","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Profile-forms/EditProfile.js":"12","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Profile-forms/AddEducation.js":"13","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Profile-forms/AddExperience.js":"14","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Dashboard/Dashboard.js":"15","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Profiles/Profiles.js":"16","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Profile/Profile.js":"17","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Posts/Posts.js":"18","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Post/Post.js":"19","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Routing/PrivateRoute.js":"20","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/actions/types.js":"21","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/actions/alert.js":"22","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Dashboard/DashboardActions.js":"23","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Layout/Spinner.js":"24","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Dashboard/Experience.js":"25","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/actions/profile.js":"26","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Profile/ProfileTop.js":"27","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Profiles/ProfileItem.js":"28","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Dashboard/Education.js":"29","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Profile/ProfileAbout.js":"30","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Profile/ProfileEducation.js":"31","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Profile/ProfileExperience.js":"32","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Profile/ProfileGithub.js":"33","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Post/CommentItem.js":"34","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Post/CommentForm.js":"35","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Posts/PostItem.js":"36","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/actions/post.js":"37","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Posts/PostForm.js":"38","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/reducers/index.js":"39","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/reducers/auth.js":"40","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/reducers/alert.js":"41","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/reducers/post.js":"42","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/reducers/profile.js":"43"},{"size":197,"mtime":1644324878953,"results":"44","hashOfConfig":"45"},{"size":2283,"mtime":1644329693085,"results":"46","hashOfConfig":"45"},{"size":405,"mtime":1644324878953,"results":"47","hashOfConfig":"45"},{"size":1878,"mtime":1644324878945,"results":"48","hashOfConfig":"45"},{"size":287,"mtime":1644324878953,"results":"49","hashOfConfig":"45"},{"size":1273,"mtime":1644330886684,"results":"50","hashOfConfig":"45"},{"size":519,"mtime":1644330887252,"results":"51","hashOfConfig":"45"},{"size":1018,"mtime":1648772793446,"results":"52","hashOfConfig":"45"},{"size":1835,"mtime":1648484627406,"results":"53","hashOfConfig":"45"},{"size":2583,"mtime":1648484627402,"results":"54","hashOfConfig":"45"},{"size":5419,"mtime":1648668115133,"results":"55","hashOfConfig":"45"},{"size":6680,"mtime":1648668114869,"results":"56","hashOfConfig":"45"},{"size":2821,"mtime":1648668115153,"results":"57","hashOfConfig":"45"},{"size":2802,"mtime":1648668115113,"results":"58","hashOfConfig":"45"},{"size":1897,"mtime":1648668961360,"results":"59","hashOfConfig":"45"},{"size":1359,"mtime":1648484627406,"results":"60","hashOfConfig":"45"},{"size":2781,"mtime":1648668961360,"results":"61","hashOfConfig":"45"},{"size":1011,"mtime":1648772793278,"results":"62","hashOfConfig":"45"},{"size":1500,"mtime":1648668961360,"results":"63","hashOfConfig":"45"},{"size":695,"mtime":1644324878949,"results":"64","hashOfConfig":"45"},{"size":1280,"mtime":1644324878945,"results":"65","hashOfConfig":"45"},{"size":409,"mtime":1644324878945,"results":"66","hashOfConfig":"45"},{"size":542,"mtime":1648486703479,"results":"67","hashOfConfig":"45"},{"size":235,"mtime":1644330887252,"results":"68","hashOfConfig":"45"},{"size":1351,"mtime":1648486703487,"results":"69","hashOfConfig":"45"},{"size":5246,"mtime":1648772793278,"results":"70","hashOfConfig":"45"},{"size":1631,"mtime":1648486703479,"results":"71","hashOfConfig":"45"},{"size":900,"mtime":1648486703479,"results":"72","hashOfConfig":"45"},{"size":1314,"mtime":1644324878949,"results":"73","hashOfConfig":"45"},{"size":855,"mtime":1648486703479,"results":"74","hashOfConfig":"45"},{"size":705,"mtime":1644324878949,"results":"75","hashOfConfig":"45"},{"size":657,"mtime":1648668114945,"results":"76","hashOfConfig":"45"},{"size":1436,"mtime":1648486703007,"results":"77","hashOfConfig":"45"},{"size":1444,"mtime":1648772793278,"results":"78","hashOfConfig":"45"},{"size":963,"mtime":1648668961364,"results":"79","hashOfConfig":"45"},{"size":2143,"mtime":1648772793446,"results":"80","hashOfConfig":"45"},{"size":3406,"mtime":1644324878945,"results":"81","hashOfConfig":"45"},{"size":872,"mtime":1648486703487,"results":"82","hashOfConfig":"45"},{"size":217,"mtime":1644324878953,"results":"83","hashOfConfig":"45"},{"size":882,"mtime":1644324878953,"results":"84","hashOfConfig":"45"},{"size":336,"mtime":1644324878953,"results":"85","hashOfConfig":"45"},{"size":1356,"mtime":1644324878953,"results":"86","hashOfConfig":"45"},{"size":808,"mtime":1644324878953,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1eyhxbz",{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"90"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"90"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"90"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"90"},"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/index.js",[],["190","191"],"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/App.js",[],"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/store.js",[],"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/actions/auth.js",[],"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/utils/setAuthToken.js",[],"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Layout/Navbar.js",[],"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Layout/Alert.js",[],"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Layout/Landing.js",[],"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Auth/Login.js",[],"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Auth/Register.js",[],"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Profile-forms/CreateProfile.js",[],"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Profile-forms/EditProfile.js",["192"],"import {connect} from \"react-redux\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport PropTypes from \"prop-types\"\nimport {useState, Fragment, useEffect} from \"react\"\nimport { createProfile, getCurrentProfile } from \"../../actions/profile\"\n\n\nconst EditProfile = ({profile: {profile, loading}, createProfile, getCurrentProfile ,history }) => {\n// \tCreate the default form data object state\n\tconst [formData, setFormData] = useState({\n\t\tcompany: \"\",\n\t\twebsite: \"\",\n\t\tlocation: \"\",\n\t\tstatus: \"\",\n\t\tskills: \"\",\n\t\tgithubusername: \"\",\n\t\tbio: \"\",\n\t\ttwitter: \"\",\n\t\tfacebook: \"\",\n\t\tlinkedin: \"\",\n\t\tyoutube: \"\",\n\t\tinstagram: \"\"\n \t});\n\tconst [displaySocialInputs, setDisplaySocialInputs] = useState(false);\n\t\n\tuseEffect(() => {\n\t\tgetCurrentProfile()\n\t\t\n// \t\tIf loading is true or field is empty set it to empty string, else fill it with the state data.\n\t\tsetFormData({\n\t\t\tcompany: loading || !profile.company ? \"\": profile.company,\n\t\t\twebsite: loading || !profile.website ? \"\": profile.website,\n\t\t\tlocation: loading || !profile.location ? \"\": profile.location,\n\t\t\tstatus: loading || !profile.status ? \"\": profile.status,\n\t\t\tskills: loading || !profile.skills ? \"\": profile.skills,\n\t\t\tgithubusername: loading || !profile.githubusername ? \"\": profile.githubusername,\n\t\t\tbio: loading || !profile.bio ? \"\": profile.bio,\n\t\t\ttwitter: loading || !profile.social ? \"\": profile.social.twitter,\n\t\t\tfacebook: loading || !profile.social ? \"\": profile.social.facebook,\n\t\t\tlinkedin: loading || !profile.social ? \"\": profile.social.linkedin,\n\t\t\tyoutube: loading || !profile.social ? \"\": profile.social.youtube, \n\t\t\tinstagram: loading || !profile.social ? \"\": profile.social.instagram\n\t\t})\n\t\t\n\t}, [getCurrentProfile, loading])\n\t\n// \tDestructure the formData object\n\tconst {\n\t\tcompany,\n\t\twebsite,\n\t\tlocation,\n\t\tstatus,\n\t\tskills,\n\t\tgithubusername,\n\t\tbio,\n\t\ttwitter,\n\t\tfacebook,\n\t\tlinkedin,\n\t\tyoutube,\n\t\tinstagram\n\t} = formData;\n\t\n\t\n\tconst toggleSocialMediaLinks = () => {\n\t\tsetDisplaySocialInputs(!displaySocialInputs)\n\t}\n\n\tconst onChange = (e) => {\n   \t\t setFormData({ ...formData, [e.target.name]: e.target.value });\n\t}\n\t\n\tconst onSubmitHandler = e => {\n\t\te.preventDefault();\n\t\t\n\t\t\n\t\tcreateProfile(formData, history, true)\n\t};\n\t\n\treturn(\n\t\t<Fragment>\n\t\t\t <h1 className=\"large text-primary\">\n\t\t\tCreate Your Profile\n\t\t  </h1>\n\t\t\t<hr></hr>\n\t\t  <p className=\"lead\">\n\t\t\t<i className=\"fas fa-user\"></i> Let's get some information to make your\n\t\t\tprofile stand out\n\t\t  </p>\n\t\t  <small>* = required field</small>\n\t\t  <form onSubmit={onSubmitHandler} className=\"form\">\n\t\t\t<div className=\"form-group\">\n\t\t\t  <select value={status} onChange={e => onChange(e)} name=\"status\">\n\t\t\t\t<option value=\"0\">* Select Professional Status</option>\n\t\t\t\t<option value=\"Developer\">Developer</option>\n\t\t\t\t<option value=\"Junior Developer\">Junior Developer</option>\n\t\t\t\t<option value=\"Senior Developer\">Senior Developer</option>\n\t\t\t\t<option value=\"Manager\">Manager</option>\n\t\t\t\t<option value=\"Student or Learning\">Student or Learning</option>\n\t\t\t\t<option value=\"Instructor\">Instructor or Teacher</option>\n\t\t\t\t<option value=\"Intern\">Intern</option>\n\t\t\t\t<option value=\"Other\">Other</option>\n\t\t\t  </select>\n\t\t\t  <small className=\"form-text\"\n\t\t\t\t>Give us an idea of where you are at in your career</small\n\t\t\t  >\n\t\t\t</div>\n\t\t\t<div className=\"form-group\">\n\t\t\t  <input type=\"text\" placeholder=\"Company\" value={company} onChange={e => onChange(e)} name=\"company\" />\n\t\t\t  <small className=\"form-text\"\n\t\t\t\t>Could be your own company or one you work for</small\n\t\t\t  >\n\t\t\t</div>\n\t\t\t<div className=\"form-group\">\n\t\t\t  <input type=\"text\" placeholder=\"Website\" value={website} onChange={e => onChange(e)} name=\"website\" />\n\t\t\t  <small className=\"form-text\"\n\t\t\t\t>Could be your own or a company website</small\n\t\t\t  >\n\t\t\t</div>\n\t\t\t<div className=\"form-group\">\n\t\t\t  <input type=\"text\" placeholder=\"Location\" value={location} onChange={e => onChange(e)} name=\"location\" />\n\t\t\t  <small className=\"form-text\"\n\t\t\t\t>City & state suggested (eg. Boston, MA)</small\n\t\t\t  >\n\t\t\t</div>\n\t\t\t<div className=\"form-group\">\n\t\t\t  <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} />\n\t\t\t  <small className=\"form-text\"\n\t\t\t\t>Please use comma separated values (eg.\n\t\t\t\tHTML,CSS,JavaScript,PHP)</small\n\t\t\t  >\n\t\t\t</div>\n\t\t\t<div className=\"form-group\">\n\t\t\t  <input\n\t\t\t\tvalue={githubusername} onChange={e => onChange(e)}\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Github Username\"\n\t\t\t\tname=\"githubusername\"\n\t\t\t  />\n\t\t\t  <small className=\"form-text\"\n\t\t\t\t>If you want your latest repos and a Github link, include your\n\t\t\t\tusername</small\n\t\t\t  >\n\t\t\t</div>\n\t\t\t<div className=\"form-group\">\n\t\t\t  <textarea placeholder=\"A short bio of yourself\" value={bio} onChange={e => onChange(e)} name=\"bio\"></textarea>\n\t\t\t  <small className=\"form-text\">Tell us a little about yourself</small>\n\t\t\t</div>\n\n\t\t\t<div className=\"my-2\">\n\t\t\t  <button onClick={toggleSocialMediaLinks} type=\"button\" className=\"btn btn-light\">\n\t\t\t\tAdd Social Network Links\n\t\t\t  </button>\n\t\t\t  <span>Optional</span>\n\t\t\t</div>\n\t\t\t  \n\t\t\t  {displaySocialInputs && <Fragment>\n\t\t\t\t<div className=\"form-group social-input\">\n\t\t\t\t  <i className=\"fab fa-twitter fa-2x\"></i>\n\t\t\t\t  <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)} />\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"form-group social-input\">\n\t\t\t\t  <i className=\"fab fa-facebook fa-2x\"></i>\n\t\t\t\t  <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)} />\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"form-group social-input\">\n\t\t\t\t  <i className=\"fab fa-youtube fa-2x\"></i>\n\t\t\t\t  <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)} />\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"form-group social-input\">\n\t\t\t\t  <i className=\"fab fa-linkedin fa-2x\"></i>\n\t\t\t\t  <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)} />\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"form-group social-input\">\n\t\t\t\t  <i className=\"fab fa-instagram fa-2x\"></i>\n\t\t\t\t  <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)} />\n\t\t\t\t</div>\n\t\t\t</Fragment>}\n \n\t\t\t\n\t\t\t<input type=\"submit\" className=\"btn btn-primary my-1\" />\n\t\t\t<Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n\t\t  </form>\n\t\t</Fragment>\n\t)\n}\n\nconst mapStateToProps = state => ({\n\tprofile: state.profile\n})\n\nEditProfile.propTypes = {\n\tcreateProfile: PropTypes.func.isRequired,\n\tgetCurrentProfile: PropTypes.func.isRequired,\n\tprofile: PropTypes.object.isRequired\n}\n\nexport default connect(mapStateToProps, {createProfile, getCurrentProfile})(withRouter(EditProfile))","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Profile-forms/AddEducation.js",["193"],"import PropTypes from \"prop-types\"\nimport {Link, withRouter} from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { addEducation } from \"../../actions/profile\"\nimport { Fragment, useState } from \"react\"\n\n\nconst AddEducation = ({addEducation, history}) => {\n\tconst [formData, setFormData] = useState({\n\t\tschool: \"\",\n\t\tdegree: \"\",\n\t\tfieldofstudy: \"\",\n\t\tfrom: \"\",\n\t\tto: \"\",\n\t\tcurrent: false,\n\t\tdescription: \"\"\n\t})\n// \tThis state will disable and enable to \"TO\" input field \n\tconst [toDateDisabled, setToDateDisabled] = useState(false)\n\t\n\tconst {\n\t\tschool,\n\t\tdegree,\n\t\tfieldofstudy,\n\t\tfrom,\n\t\tto,\n\t\tcurrent,\n\t\tdescription\n\t} = formData\n\t\n// \tGet form data with onChange listener\n\tconst onChange = e => setFormData({...formData, [e.target.name] : e.target.value})\n\t\n\tconst onSubmitHandler = (e) => {\n\t\te.preventDefault();\n\t\t\n\t\taddEducation(formData, history)\n\t}\n\n\t\n\treturn(\n\t\t<Fragment>\n\t\t\t<h1 class=\"large text-primary\">Add Your Education</h1>\n\t\t\t<hr></hr>\n\t\t  <p class=\"lead\">\n\t\t\t<i class=\"fas fa-code-branch\"></i> Add any school or bootcamp that you have atended\n\t\t  </p>\n\t\t  <small>* = required field</small>\n\t\t  <form onSubmit={onSubmitHandler} class=\"form\">\n\t\t\t<div class=\"form-group\">\n\t\t\t  <input value={school} onChange={e => onChange(e)} type=\"text\" placeholder=\"* School or Bootcamp\" name=\"school\" required />\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t  <input value={degree} onChange={e => onChange(e)} type=\"text\" placeholder=\"* Degree or Certificate\" name=\"degree\" required />\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t  <input value={fieldofstudy} onChange={e => onChange(e)} type=\"text\" placeholder=\"Field of Study\" name=\"fieldofstudy\" />\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t  <h4>From Date</h4>\n\t\t\t  <input value={from} onChange={e => onChange(e)} type=\"date\" name=\"from\" />\n\t\t\t</div>\n\t\t\t <div class=\"form-group\">\n\t\t\t  <p><input value={current} checked={current} onChange={e => {\n\t\t\t\t\t\t  setFormData({...formData, current: !current})\n\t\t\t\t\t\t  setToDateDisabled(!toDateDisabled)\n\t\t\t\t\t  }} type=\"checkbox\" name=\"current\" value=\"\" />{\" \"} Current School</p>\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t  <h4>To Date</h4>\n\t\t\t  <input value={to} disabled={toDateDisabled ? \"disabled\" : \"\"} onChange={e => onChange(e)} type=\"date\" name=\"to\" />\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t  <textarea\n\t\t\t\tname=\"description\"\n\t\t\t\tcols=\"30\"\n\t\t\t\trows=\"5\"\n\t\t\t\tvalue={description}\n\t\t\t\tonChange={e => onChange(e)}\n\t\t\t\tplaceholder=\"Program Description\"\n\t\t\t  ></textarea>\n\t\t\t</div>\n\t\t\t<input type=\"submit\" class=\"btn btn-primary my-1\" />\n\t\t\t<Link class=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n\t\t  </form>\n\t\t</Fragment>\n\t)\n}\n\n// Adds a type to the function \nAddEducation.propTypes = ({\n\taddEducation: PropTypes.func.isRequired\n})\n\nexport default connect(null, {addEducation} )(withRouter(AddEducation));","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Profile-forms/AddExperience.js",["194"],"import PropTypes from \"prop-types\"\nimport {Link, withRouter} from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { addExperience } from \"../../actions/profile\"\nimport { Fragment, useState } from \"react\"\n\n\nconst AddExperience = ({addExperience, history}) => {\n\tconst [formData, setFormData] = useState({\n\t\tcompany: \"\",\n\t\ttitle: \"\",\n\t\tlocation: \"\",\n\t\tfrom: \"\",\n\t\tto: \"\",\n\t\tcurrent: false,\n\t\tdescription: \"\"\n\t})\n// \tThis state will disable and enable to \"TO\" input field \n\tconst [toDateDisabled, setToDateDisabled] = useState(false)\n\t\n\tconst {\n\t\tcompany,\n\t\ttitle,\n\t\tlocation,\n\t\tfrom,\n\t\tto,\n\t\tcurrent,\n\t\tdescription\n\t} = formData\n\t\n// \tGet form data with onChange listener\n\tconst onChange = e => setFormData({...formData, [e.target.name] : e.target.value})\n\t\n\tconst onSubmitHandler = (e) => {\n\t\te.preventDefault();\n\t\t\n\t\taddExperience(formData, history)\n\t}\n\n\t\n\treturn(\n\t\t<Fragment>\n\t\t\t<h1 class=\"large text-primary\">Add An Experience</h1>\n\t\t\t<hr></hr>\n\t\t  <p class=\"lead\">\n\t\t\t<i class=\"fas fa-code-branch\"></i> Add any developer/programming\n\t\t\tpositions that you have had in the past\n\t\t  </p>\n\t\t  <small>* = required field</small>\n\t\t  <form onSubmit={onSubmitHandler} class=\"form\">\n\t\t\t<div class=\"form-group\">\n\t\t\t  <input value={title} onChange={e => onChange(e)} type=\"text\" placeholder=\"* Job Title\" name=\"title\" required />\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t  <input value={company} onChange={e => onChange(e)} type=\"text\" placeholder=\"* Company\" name=\"company\" required />\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t  <input value={location} onChange={e => onChange(e)} type=\"text\" placeholder=\"Location\" name=\"location\" />\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t  <h4>From Date</h4>\n\t\t\t  <input value={from} onChange={e => onChange(e)} type=\"date\" name=\"from\" />\n\t\t\t</div>\n\t\t\t <div class=\"form-group\">\n\t\t\t  <p><input value={current} checked={current} onChange={e => {\n\t\t\t\t\t\t  setFormData({...formData, current: !current})\n\t\t\t\t\t\t  setToDateDisabled(!toDateDisabled)\n\t\t\t\t\t  }} type=\"checkbox\" name=\"current\" value=\"\" />{\" \"} Current Job</p>\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t  <h4>To Date</h4>\n\t\t\t  <input value={to} disabled={toDateDisabled ? \"disabled\" : \"\"} onChange={e => onChange(e)} type=\"date\" name=\"to\" />\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t  <textarea\n\t\t\t\tname=\"description\"\n\t\t\t\tcols=\"30\"\n\t\t\t\trows=\"5\"\n\t\t\t\tvalue={description}\n\t\t\t\tonChange={e => onChange(e)}\n\t\t\t\tplaceholder=\"Job Description\"\n\t\t\t  ></textarea>\n\t\t\t</div>\n\t\t\t<input type=\"submit\" class=\"btn btn-primary my-1\" />\n\t\t\t<Link class=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n\t\t  </form>\n\t\t</Fragment>\n\t)\n}\n\n// Adds a type to the function \nAddExperience.propTypes = ({\n\taddExperience: PropTypes.func.isRequired\n})\n\nexport default connect(null, {addExperience} )(withRouter(AddExperience));\n\n","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Dashboard/Dashboard.js",[],"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Profiles/Profiles.js",[],"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Profile/Profile.js",[],"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Posts/Posts.js",[],"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Post/Post.js",["195","196"],"import React, {Fragment, useEffect} from \"react\"\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport { getPost, deleteComment } from \"../../actions/post\"\nimport Spinner from \"../Layout/Spinner\"\nimport PostItem from \"../Posts/PostItem\"\nimport {Link} from \"react-router-dom\"\nimport CommentForm from \"./CommentForm\"\nimport CommentItem from \"./CommentItem\"\n\n\nconst Post = ({ getPost, match, post: {post, loading} }) => {\n\t\n\tuseEffect(() => {\n\t\tgetPost(match.params.id)\n\t\t\n\t}, [getPost])\n// \tIf post exists and loading is done render the PostItem component and send the post data and set showActions to false\n// \tthe props showActions is used in the postItem component to conditionally render parts of the component\n// \tWe loop through the post comments and render a CommentItem component for each comment\n// \tWe send props with comment data and postId to each CommentItem component\n\treturn loading || post === null ? <Spinner /> : (\n\t\t<Fragment>\n\t\t\t<Link className=\"btn\" to=\"/posts\">Back To Posts</Link>\n\t\t\t<PostItem post = {post} showActions={false} />\n\t\t\t<CommentForm postId={post._id} />\n\t\t\t<div className=\"comments\">\n\t\t\t\t{post.comments.map(comment => (\n\t\t\t\t\t<CommentItem key={comment._id} comment={comment} postId={post._id}/>\t\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</Fragment>\n\t)}\n\nconst mapStateToProps = state => ({\n\tpost: state.post\n})\n\nPost.propTypes = {\n\tgetPost: PropTypes.func.isRequired,\n\tpost: PropTypes.object.isRequired\n}\n\n\nexport default connect(mapStateToProps, {getPost})(Post)","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Routing/PrivateRoute.js",[],"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/actions/types.js",[],"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/actions/alert.js",[],"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Dashboard/DashboardActions.js",[],"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Layout/Spinner.js",["197"],"import {Fragment} from \"react\"\nimport spinner from \"./spinner.gif\"\n\n\nexport default () => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<img src={spinner} style={{width: \"200px\", margin: \"auto\", display: \"block\" }} alt=\"Loading...\"/>\n\t\t</Fragment>\n\t)\n} ","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Dashboard/Experience.js",[],"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/actions/profile.js",[],"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Profile/ProfileTop.js",[],"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Profiles/ProfileItem.js",["198"],"import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport PropTypes from \"prop-types\"\n\n// Destructure the profile object from the props\nconst ProfileItem = ({profile: {user: {_id, name, avatar}, status, company, location, skills } }) => {\n\t\n\treturn(\n\t\t<div className=\"profile bg-light\">\n\t\t\t<img src={avatar} alt=\"profile picture\" className=\"round-img\"></img>\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{status} {company && <span> at {company}</span>}</p>\n\t\t\t\t<p className=\"my-1\">{location && <span>{location}</span>}</p>\n\t\t\t\t<Link to={`/profile/${_id}`} className=\"btn btn-primary\">View Profile</Link>\n\t\t\t</div>\n\t\t\t<ul>\n\t\t\t\t{skills.slice(0.4).map((skill, index) => {\n\t\t\t\t\treturn <li key={index} className=\"text-primary\"><i className=\"fas fa-check\"></i> {skill}</li>\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\n\nProfileItem.propTypes = {\n\tprofile: PropTypes.object.isRequired\n}\n\nexport default ProfileItem","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Dashboard/Education.js",[],"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Profile/ProfileAbout.js",[],"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Profile/ProfileEducation.js",["199","200"],"import React, {Fragment} from \"react\"\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport Moment from \"react-moment\"\n\n\nconst ProfileEducation = ({education: {school, degree, fieldofstudy, from, to, description} }) => {\n\t\n\treturn(\n\t\t<div>\n\t\t\t<h3 className=\"text-dark\">{school}</h3>\n\t\t\t<p> <Moment format=\"YYYY/MM/DD\">{from}</Moment> - {!to ? \" Now\": <Moment format=\"YYYY/MM/DD\">{to}</Moment>} </p>\n\t\t\t<p> <strong>Degree: </strong>{degree} </p>\n\t\t\t<p> <strong>Field Of Study: </strong>{fieldofstudy} </p>\n\t\t\t<p> <strong>Description: </strong>{description} </p>\n\t\t</div>\n\t)\n}\n\nProfileEducation.propTypes = {\n\teducation: PropTypes.array.isRequired\n}\n\nexport default ProfileEducation;","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Profile/ProfileExperience.js",["201","202"],"import React, {Fragment} from \"react\"\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport Moment from \"react-moment\"\n\n\nconst ProfileExperience = ({experience: {company, title, location, current, to, from, description} }) => {\n\t\n\treturn(\n\t\t<div>\n\t\t\t<h3 className=\"text-dark\">{company}</h3>\n\t\t\t<p> <Moment format=\"YYYY/MM/DD\">{from}</Moment> - {!to ? \" Now\": <Moment format=\"YYYY/MM/DD\">{to}</Moment>} </p>\n\t\t\t<p> <strong>Position: </strong>{title} </p>\n\t\t\t<p> <strong>Description: </strong>{description} </p>\n\t\t</div>\n\t)\n}\n\nProfileExperience.propTypes = {\n\texperience: PropTypes.array.isRequired\n}\n\nexport default ProfileExperience;","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Profile/ProfileGithub.js",["203"],"import React, {useEffect} from \"react\"\nimport {connect} from \"react-redux\"\nimport PropTypes from \"prop-types\"\nimport Spinner from \"../Layout/Spinner\"\nimport { getGithubRepos } from \"../../actions/profile\"\n\nconst ProfileGithub = ({username, getGithubRepos, repos}) => {\n\t\n\tuseEffect(() => {\n\t\t\n\t\tgetGithubRepos(username);\n\t\tconsole.log(repos);\n\t\t\n\t}, [getGithubRepos]);\n\t\n\treturn(\n\t\t<div className=\"profile-github\">\n\t\t\t<h2 className=\"text-primary my-1\">Github Repositories</h2>\n\t\t\t{repos === null ? <Spinner/> : (\n\t\t\t\trepos.map(repo => (\n\t\t\t\t<div className=\"repo bg-white p-1 my-1\" key={repo._id}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\t<a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\t{repo.name}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</h4>\t\n\t\t\t\t\t\t<p>{repo.description}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li className=\"badge badge-primary\">\n\t\t\t\t\t\t\t\tStars: {repo.stargazers_count}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li className=\"badge badge-dark\">\n\t\t\t\t\t\t\t\tWatchers: {repo.watchers_count}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li className=\"badge badge-light\">\n\t\t\t\t\t\t\t\tForks: {repo.forks_count}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t))\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nconst mapPropsToState = state => ({\n\trepos: state.profile.repos\n})\n\nProfileGithub.propTypes = {\n\tusername: PropTypes.string.isRequired,\n\tgetGithubRepos: PropTypes.func.isRequired,\n\trepos: PropTypes.array.isRequired\n}\n\nexport default connect(mapPropsToState, {getGithubRepos})(ProfileGithub)","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Post/CommentItem.js",["204","205"],"import React, {Fragment} from \"react\"\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport {deleteComment} from \"../../actions/post\"\nimport {Link} from \"react-router-dom\"\nimport Moment from \"react-moment\"\n\nconst CommentForm = ({auth, deleteComment, postId, comment: {_id, text, name, avatar, user, date} }) => {\n\n\tconst deleteItemHandler = () => {\n\t\tdeleteComment(postId, _id)\n\t}\n\t\n\treturn(\n\t\t<div className=\"post bg-white p-1 my-1\">\n          <div className=\"thumbnail\">\n            <Link to={`/profile/${user}`}>\n              <img\n                className=\"round-img\"\n                src={avatar}\n                alt=\"\"\n              />\n              <h4>{name}</h4>\n\t\t\t</Link>\n          </div>\n          <div>\n            <p className=\"my-1\"> {text} </p>\n             <p className=\"post-date\">Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment></p>\n\t\t\t {!auth.loading && user === auth.user._id && (\n\t\t\t\t  <button type=\"button\" className=\"btn btn-danger\" onClick={() => deleteComment(postId, _id)}>\n\t\t\t\t\t  <i className=\"fas fa-times\"></i>\n\t\t\t\t  </button>\n\t\t\t )}\n          </div>\n        </div>\n\t)\n}\n\nconst mapStateToProps = state => ({\n\tauth: state.auth\n})\n\nCommentForm.propTypes = {\n\tauth: PropTypes.object.isRequired,\n\tcomment: PropTypes.object.isRequired,\n\tdeleteComment: PropTypes.func.isRequired\n\t// postId: PropTypes.number.isRequired\n}\n\nexport default connect(mapStateToProps, {deleteComment})(CommentForm)","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Post/CommentForm.js",[],"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Posts/PostItem.js",[],"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/actions/post.js",["206","207"],"import axios from \"axios\";\nimport {GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT} from \"./types\"\nimport {setAlert} from \"./alert\"\n\n// GET posts\nexport const getPosts = () => async dispatch => {\n\t\n\ttry{\n\t\tconst res = await axios.get(\"/api/posts\");\n\n\t\tdispatch({\n\t\t\ttype: GET_POSTS,\n\t\t\tpayload: res.data\n\t\t})\n\t\t\n\t}catch(err){\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status }\n\t\t})\n\t}\n}\n\n// ADD A LIKE\nexport const addLike = (postId) => async dispatch => {\n\ttry{\n\t\tconst res = await axios.put(`/api/posts/like/${postId}`);\n\t\t \n\t\tdispatch({\n\t\t\ttype: UPDATE_LIKES,\n\t\t\tpayload: {postId, likes: res.data}\n\t\t})\n\t\t\n\t}catch(err){\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status }\n\t\t})\n\t}\n}\n\n// REMOVE A LIKE\nexport const removeLike = (postId) => async dispatch => {\n\ttry{\n\t\tconst res = await axios.put(`/api/posts/unlike/${postId}`);\n\t\t \n\t\tdispatch({\n\t\t\ttype: UPDATE_LIKES,\n\t\t\tpayload: {postId, likes: res.data}\n\t\t})\n\t\t\n\t}catch(err){\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status }\n\t\t})\n\t}\n}\n\n// DELETE POST\nexport const deletePost = (postId) => async dispatch => {\n\ttry{\n\t\t\n\t\tconst res = await axios.delete(`/api/posts/${postId}`)\n\t\t\n\t\tdispatch({\n\t\t\ttype: DELETE_POST,\n\t\t\tpayload: postId\n\t\t})\n\t\t\n\t\tdispatch(setAlert(\"Post Removed\", \"success\"))\n\t\t\n\t\t\n\t}catch(err){\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status }\n\t\t})\n\t}\n}\n\n// ADD POST\nexport const addPost = (formData) => async dispatch => {\n\t\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t}\n\t}\n\t\n\ttry{\n\t\tconst res = await axios.post(\"/api/posts\", formData, config);\n\t\t\n\t\tdispatch({\n\t\t\ttype: ADD_POST,\n\t\t\tpayload: res.data\n\t\t})\n\t\t\n\t\tdispatch(setAlert(\"Post Created\", \"success\"))\n\t\t\n\t}catch(err){\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status }\n\t\t})\n\t}\n}\n\n// GET POST\nexport const getPost = (id) => async dispatch => {\n\t\n\ttry{\n\t\tconst res = await axios.get(`/api/posts/${id}`);\n\t\t\n\t\tdispatch({\n\t\t\ttype: GET_POST,\n\t\t\tpayload: res.data\n\t\t})\n\t\t\n\t}catch(err){\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status }\n\t\t})\n\t}\n}\n\n// ADD COMMENT\nexport const addComment = (postId, formData) => async dispatch => {\n\t\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t}\n\t}\n\t\n\ttry{\n\t\t\n\t\tconst res = await axios.post(`/api/posts/comment/${postId}`, formData, config)\n\t\t\n\t\tdispatch({\n\t\t\ttype: ADD_COMMENT,\n\t\t\tpayload: res.data\n\t\t})\n\t\t\n\t\tdispatch(setAlert(\"Comment Added\", \"success\"))\n\t\t\n\t}catch(err){\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status }\n\t\t})\n\t}\n}\n\n// DELETE COMMENT\nexport const deleteComment = (postId, commentId) => async dispatch => {\n\t\n\ttry{\n\t\t\n\t\tconst res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`)\n\t\t\n// \t\tsend payload with the removed comment id in order to update the state\n\t\tdispatch({\n\t\t\ttype: REMOVE_COMMENT,\n\t\t\tpayload: commentId\n\t\t})\n\t\t\n\t\tdispatch(setAlert(\"Comment Removed\", \"success\"))\n\t\t\n\t}catch(err){\n\t\t\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status }\n\t\t})\n\t}\n}","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Posts/PostForm.js",[],"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/reducers/index.js",[],"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/reducers/auth.js",["208"],"import {REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, ACCOUNT_DELETED} from \"../actions/types\"\n\n\nconst initialState = {\n\ttoken: localStorage.getItem(\"token\"),\n\tisAuthenticated: null,\n\tloading: true,\n\tuser: null\n}\n\n\nexport default function (state = initialState, action){\n\tconst {type, payload} = action\n\t\n\tswitch(type){\n\t\t\n\t\tcase USER_LOADED:\n\t\t\treturn {...state, isAuthenticated: true, loading: false, user: payload}\n\t\t\t\n\t\tcase LOGIN_SUCCESS:\n\t\tcase REGISTER_SUCCESS:\n\t\t\tlocalStorage.setItem(\"token\", payload.token)\n\t\t\treturn {...state, ...payload, isAuthenticated: true, loading: false};\n\t\tcase ACCOUNT_DELETED:\n\t\tcase LOGOUT:\n\t\tcase LOGIN_FAIL:\n\t\tcase AUTH_ERROR:\n\t\tcase REGISTER_FAIL:\n\t\t\tlocalStorage.removeItem(\"token\")\n\t\t\treturn {...state, token: null, isAuthenticated: false, loading: false};\n\t\t\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/reducers/alert.js",["209"],"import {SET_ALERT, REMOVE_ALERT} from \"../actions/types\";\n\n\nconst initialState = [];\n\nexport default function(state = initialState, action){\n\t\n\tswitch(action.type){\n\t\tcase SET_ALERT:\n\t\t\treturn [...state, action.payload];\n\t\tcase REMOVE_ALERT:\n\t\t\treturn state.filter(alert => alert.id !== action.payload);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/reducers/post.js",["210"],"import {GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT} from \"../actions/types\"\n\nconst initialState = {\n\tpost: null,\n\tposts: [],\n\tloading: true,\n\terror: {}\n}\n\nexport default function(state = initialState, action){\n\tconst {type, payload} = action;\n\t\n\tswitch(type){\n\t\tcase GET_POSTS:\n\t\t\treturn {...state, posts: payload, loading: false};\n\t\tcase GET_POST:\n\t\t\treturn {...state, post: payload, loading: false}\n\t\tcase ADD_POST:\n\t\t\treturn {...state, posts: [payload, ...state.posts], loading: false}\t\n\t\tcase DELETE_POST:\n\t\t\treturn {...state, posts: state.posts.filter(post => post._id !== payload), loading: false}\n\t\tcase ADD_COMMENT:\n\t\t\treturn {...state, post: {...state.post, comments: payload }, loading: false};\n\t\tcase REMOVE_COMMENT:\n\t\t\treturn {...state, post: {...state.post, comments: state.post.comments.filter(comment => comment._id !== payload)}, loading: false }\n\t\tcase POST_ERROR:\n\t\t\treturn {...state, error: payload, loading: false};\n// \t\t\tLIKE AND DISLIKE POST REDUCER\n\t\tcase UPDATE_LIKES:\n\t\t\treturn {\n\t\t\t\t...state,\n// \t\t\t\tMap trough all post and find the one that we are updating, return the post data and only change the likes array.\n\t\t\t\tposts: state.posts.map(post => post._id === payload.postId ? {...post, likes: payload.likes} : post),\n\t\t\t\tloading: false\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/reducers/profile.js",["211"],"import {GET_PROFILE, PROFILE_ERROR, CLEAR_PROFILE, UPDATE_PROFILE, GET_PROFILES, GET_REPOSITORIES} from \"../actions/types\"\n\nconst initialState = {\n\tprofile: null,\n\tprofiles: [],\n\trepos: [],\n\tloading: true,\n\terror: {}\n}\n\nexport default function(state = initialState, action){\n\tconst { type, payload } = action;\n// \tHandling actions\n\tswitch(type){\n\t\tcase UPDATE_PROFILE:\n\t\tcase GET_PROFILE:\n\t\t\treturn {...state, profile: payload, loading: false};\n\t\tcase PROFILE_ERROR:\n\t\t\treturn {...state,profile: null, error: payload, loading: false};\n\t\tcase CLEAR_PROFILE:\n\t\t\treturn {...state, profile: null,repos: [], loading: false}\n\t\tcase GET_PROFILES:\n\t\t\treturn {...state, profiles: payload, loading: false}\n\t\tcase GET_REPOSITORIES:\n\t\t\treturn {...state, repos: payload, loading: false}\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n",{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","severity":1,"message":"217","line":45,"column":5,"nodeType":"218","endLine":45,"endColumn":33,"suggestions":"219"},{"ruleId":"220","severity":1,"message":"221","line":67,"column":42,"nodeType":"222","messageId":"223","endLine":67,"endColumn":50},{"ruleId":"220","severity":1,"message":"221","line":68,"column":42,"nodeType":"222","messageId":"223","endLine":68,"endColumn":50},{"ruleId":"224","severity":1,"message":"225","line":4,"column":19,"nodeType":"226","messageId":"227","endLine":4,"endColumn":32},{"ruleId":"216","severity":1,"message":"228","line":17,"column":5,"nodeType":"218","endLine":17,"endColumn":14,"suggestions":"229"},{"ruleId":"230","severity":1,"message":"231","line":5,"column":1,"nodeType":"232","endLine":11,"endColumn":2},{"ruleId":"233","severity":1,"message":"234","line":10,"column":4,"nodeType":"235","endLine":10,"endColumn":66},{"ruleId":"224","severity":1,"message":"236","line":1,"column":16,"nodeType":"226","messageId":"227","endLine":1,"endColumn":24},{"ruleId":"224","severity":1,"message":"237","line":3,"column":9,"nodeType":"226","messageId":"227","endLine":3,"endColumn":16},{"ruleId":"224","severity":1,"message":"236","line":1,"column":16,"nodeType":"226","messageId":"227","endLine":1,"endColumn":24},{"ruleId":"224","severity":1,"message":"237","line":3,"column":9,"nodeType":"226","messageId":"227","endLine":3,"endColumn":16},{"ruleId":"216","severity":1,"message":"238","line":14,"column":5,"nodeType":"218","endLine":14,"endColumn":21,"suggestions":"239"},{"ruleId":"224","severity":1,"message":"236","line":1,"column":16,"nodeType":"226","messageId":"227","endLine":1,"endColumn":24},{"ruleId":"224","severity":1,"message":"240","line":10,"column":8,"nodeType":"226","messageId":"227","endLine":10,"endColumn":25},{"ruleId":"224","severity":1,"message":"241","line":64,"column":9,"nodeType":"226","messageId":"227","endLine":64,"endColumn":12},{"ruleId":"224","severity":1,"message":"241","line":161,"column":9,"nodeType":"226","messageId":"227","endLine":161,"endColumn":12},{"ruleId":"230","severity":1,"message":"242","line":12,"column":1,"nodeType":"232","endLine":35,"endColumn":2},{"ruleId":"230","severity":1,"message":"242","line":6,"column":1,"nodeType":"232","endLine":16,"endColumn":2},{"ruleId":"230","severity":1,"message":"242","line":10,"column":1,"nodeType":"232","endLine":39,"endColumn":2},{"ruleId":"230","severity":1,"message":"242","line":11,"column":1,"nodeType":"232","endLine":29,"endColumn":2},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["245"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-unused-vars","'deleteComment' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["246"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Fragment' is defined but never used.","'connect' is defined but never used.","React Hook useEffect has missing dependencies: 'repos' and 'username'. Either include them or remove the dependency array.",["247"],"'deleteItemHandler' is assigned a value but never used.","'res' is assigned a value but never used.","Unexpected default export of anonymous function","no-global-assign","no-unsafe-negation",{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"254","text":"255"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"256","text":"257"},"Update the dependencies array to be: [getGithubRepos, repos, username]",{"range":"258","text":"259"},[1678,1706],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",[498,507],"[getPost, match.params.id]",[350,366],"[getGithubRepos, repos, username]"]