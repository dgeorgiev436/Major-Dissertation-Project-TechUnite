{"ast":null,"code":"var _jsxFileName = \"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Profile/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getProfileById } from \"../../actions/profile\";\nimport Spinner from \"../Layout/Spinner\";\nimport { Link } from \"react-router-dom\";\nimport ProfileTop from \"./ProfileTop\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileExperience from \"./ProfileExperience\";\nimport ProfileEducation from \"./ProfileEducation\";\nimport ProfileGithub from \"./ProfileGithub\"; // In React we use props.match.params.paramName to get the parameters in the URI\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = ({\n  profile: {\n    profile,\n    loading\n  },\n  match,\n  auth,\n  getProfileById\n}) => {\n  _s();\n\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]); // \tConditionally render Spinner or Fragment based on the profile state\n  // \tConditionally render a Edit Profile button if the logged in user is viewing his own profile\n  // \tRender The ProfileTop component and pass the profile data via props\n  // \tMap through experience array and for each experience render ProfileExperience component\n  // \tPass experience data to ProfileExperience component through props\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: profile === null || loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 35\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"large text-primary\",\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profiles\",\n        className: \"btn btn-light\",\n        children: \"Back To Profiles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 6\n      }, this), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/edit-profile\",\n        className: \"btn btn-dark\",\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 96\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"profile-grid my-1\",\n        children: [/*#__PURE__*/_jsxDEV(ProfileTop, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(ProfileAbout, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-exp bg-white p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-primary\",\n            children: \"Experience\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 7\n          }, this), profile.experience.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: profile.experience.map(experience => /*#__PURE__*/_jsxDEV(ProfileExperience, {\n              experience: experience\n            }, experience._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 46\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 42\n          }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"No experience credentials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-edu bg-white p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-primary\",\n            children: \"Education\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 7\n          }, this), profile.education.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: profile.education.map(education => /*#__PURE__*/_jsxDEV(ProfileEducation, {\n              education: education\n            }, education._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 44\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"No education credentials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this), profile.githubusername && /*#__PURE__*/_jsxDEV(ProfileGithub, {\n          username: profile.githubusername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 49\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Profile, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profile;\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","connect","getProfileById","Spinner","Link","ProfileTop","ProfileAbout","ProfileExperience","ProfileEducation","ProfileGithub","Profile","profile","loading","match","auth","params","id","isAuthenticated","user","_id","experience","length","map","education","githubusername","mapStateToProps","state","propTypes","func","isRequired","object"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { getProfileById } from \"../../actions/profile\"\nimport Spinner from \"../Layout/Spinner\"\nimport { Link } from \"react-router-dom\"\nimport ProfileTop from \"./ProfileTop\"\nimport ProfileAbout from \"./ProfileAbout\"\nimport ProfileExperience from \"./ProfileExperience\"\nimport ProfileEducation from \"./ProfileEducation\"\nimport ProfileGithub from \"./ProfileGithub\"\n\n\n// In React we use props.match.params.paramName to get the parameters in the URI\nconst Profile = ({profile: {profile, loading}, match, auth, getProfileById }) => {\n\t\n\tuseEffect(() => {\n\t\t\n\t\tgetProfileById(match.params.id);\n\t\t\n\t}, [getProfileById, match.params.id])\n\t\n// \tConditionally render Spinner or Fragment based on the profile state\n// \tConditionally render a Edit Profile button if the logged in user is viewing his own profile\n// \tRender The ProfileTop component and pass the profile data via props\n// \tMap through experience array and for each experience render ProfileExperience component\n// \tPass experience data to ProfileExperience component through props\n\treturn(\n\t\t<Fragment>\n\t\t\t{profile === null || loading ? <Spinner /> : <Fragment>\n\t\t\t\t <h1 className=\"large text-primary\">Profile</h1>\n\t\t\t\t <Link to=\"/profiles\" className=\"btn btn-light\">Back To Profiles</Link>\n\t\t\t\t {auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && (<Link to=\"/edit-profile\" className=\"btn btn-dark\">Edit Profile</Link>)}\n\t\t\t\t <div class=\"profile-grid my-1\">\n\t\t\t\t\t <ProfileTop profile={profile}/>\n\t\t\t\t\t <ProfileAbout profile={profile}/>\n\t\t\t\t\t <div className=\"profile-exp bg-white p-2\">\n\t\t\t\t\t\t<h2 className=\"text-primary\">Experience</h2>\n\t\t\t\t\t \t{profile.experience.length > 0 ? (<Fragment>\n\t\t\t\t\t\t\t{profile.experience.map(experience => <ProfileExperience key={experience._id} experience={experience} />)}\n\t\t\t\t\t\t</Fragment>) : (<h4>No experience credentials</h4>)}\n\t\t\t\t\t </div>\n\t\t\t\t\t <div className=\"profile-edu bg-white p-2\">\n\t\t\t\t\t\t<h2 className=\"text-primary\">Education</h2>\n\t\t\t\t\t \t{profile.education.length > 0 ? (<Fragment>\n\t\t\t\t\t\t\t{profile.education.map(education => <ProfileEducation key={education._id} education={education} />)}\n\t\t\t\t\t\t</Fragment>) : (<h4>No education credentials</h4>)}\n\t\t\t\t\t </div>\n\t\t\t\t\t \n\t\t\t\t\t {profile.githubusername && (\n\t\t\t\t\t \t<ProfileGithub username={profile.githubusername}/>\n\t\t\t\t\t )}\n\t\t\t\t </div>\n\t\t\t</Fragment>}\n\t\t</Fragment>\n\t)\n}\n\nconst mapStateToProps = state => ({\n\tprofile: state.profile,\n\tauth: state.auth\n})\n\nProfile.propTypes = {\n\tgetProfileById: PropTypes.func.isRequired,\n\tprofile: PropTypes.object.isRequired,\n\tauth: PropTypes.object.isRequired\n}\n\nexport default connect(mapStateToProps, { getProfileById })(Profile)"]},"metadata":{},"sourceType":"module"}