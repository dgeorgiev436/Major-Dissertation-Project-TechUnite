{"ast":null,"code":"var _jsxFileName = \"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Post/CommentItem.js\";\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteComment } from \"../../actions/post\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentForm = ({\n  auth,\n  deleteComment,\n  postId,\n  comment: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    date\n  }\n}) => {\n  const deleteItemHandler = () => {\n    deleteComment(postId, _id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post bg-white p-1 my-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thumbnail\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/profile/${user}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"round-img\",\n          src: avatar,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"my-1\",\n        children: [\" \", text, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"post-date\",\n        children: [\"Posted on \", /*#__PURE__*/_jsxDEV(Moment, {\n          format: \"YYYY/MM/DD\",\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }, this), !auth.loading && user === auth.user._id && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger\",\n        onClick: () => deleteComment(postId, _id),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }, this);\n};\n\n_c = CommentForm;\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nCommentForm.propTypes = {\n  auth: PropTypes.object.isRequired,\n  comment: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired // postId: PropTypes.number.isRequired\n\n};\nexport default connect(mapStateToProps, {\n  deleteComment\n})(CommentForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Post/CommentItem.js"],"names":["React","Fragment","PropTypes","connect","deleteComment","Link","Moment","CommentForm","auth","postId","comment","_id","text","name","avatar","user","date","deleteItemHandler","loading","mapStateToProps","state","propTypes","object","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAR,QAA4B,oBAA5B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOJ,EAAAA,aAAP;AAAsBK,EAAAA,MAAtB;AAA8BC,EAAAA,OAAO,EAAE;AAACC,IAAAA,GAAD;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA,MAAlB;AAA0BC,IAAAA,IAA1B;AAAgCC,IAAAA;AAAhC;AAAvC,CAAD,KAAoF;AAEvG,QAAMC,iBAAiB,GAAG,MAAM;AAC/Bb,IAAAA,aAAa,CAACK,MAAD,EAASE,GAAT,CAAb;AACA,GAFD;;AAIA,sBACC;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,4BACQ;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,YAAWI,IAAK,EAA3B;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,WADZ;AAEE,UAAA,GAAG,EAAED,MAFP;AAGE,UAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAA,oBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADR,eAWQ;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,wBAAsBD,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEG;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,8CAAmC,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAC,YAAf;AAAA,oBAA6BI;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH,EAGL,CAACR,IAAI,CAACU,OAAN,IAAiBH,IAAI,KAAKP,IAAI,CAACO,IAAL,CAAUJ,GAApC,iBACC;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,gBAAhC;AAAiD,QAAA,OAAO,EAAE,MAAMP,aAAa,CAACK,MAAD,EAASE,GAAT,CAA7E;AAAA,+BACC;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAJI;AAAA;AAAA;AAAA;AAAA;AAAA,YAXR;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAuBA,CA7BD;;KAAMJ,W;;AA+BN,MAAMY,eAAe,GAAGC,KAAK,KAAK;AACjCZ,EAAAA,IAAI,EAAEY,KAAK,CAACZ;AADqB,CAAL,CAA7B;;AAIAD,WAAW,CAACc,SAAZ,GAAwB;AACvBb,EAAAA,IAAI,EAAEN,SAAS,CAACoB,MAAV,CAAiBC,UADA;AAEvBb,EAAAA,OAAO,EAAER,SAAS,CAACoB,MAAV,CAAiBC,UAFH;AAGvBnB,EAAAA,aAAa,EAAEF,SAAS,CAACsB,IAAV,CAAeD,UAHP,CAIvB;;AAJuB,CAAxB;AAOA,eAAepB,OAAO,CAACgB,eAAD,EAAkB;AAACf,EAAAA;AAAD,CAAlB,CAAP,CAA0CG,WAA1C,CAAf","sourcesContent":["import React, {Fragment} from \"react\"\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport {deleteComment} from \"../../actions/post\"\nimport {Link} from \"react-router-dom\"\nimport Moment from \"react-moment\"\n\nconst CommentForm = ({auth, deleteComment, postId, comment: {_id, text, name, avatar, user, date} }) => {\n\n\tconst deleteItemHandler = () => {\n\t\tdeleteComment(postId, _id)\n\t}\n\t\n\treturn(\n\t\t<div className=\"post bg-white p-1 my-1\">\n          <div className=\"thumbnail\">\n            <Link to={`/profile/${user}`}>\n              <img\n                className=\"round-img\"\n                src={avatar}\n                alt=\"\"\n              />\n              <h4>{name}</h4>\n\t\t\t</Link>\n          </div>\n          <div>\n            <p className=\"my-1\"> {text} </p>\n             <p className=\"post-date\">Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment></p>\n\t\t\t {!auth.loading && user === auth.user._id && (\n\t\t\t\t  <button type=\"button\" className=\"btn btn-danger\" onClick={() => deleteComment(postId, _id)}>\n\t\t\t\t\t  <i className=\"fas fa-times\"></i>\n\t\t\t\t  </button>\n\t\t\t )}\n          </div>\n        </div>\n\t)\n}\n\nconst mapStateToProps = state => ({\n\tauth: state.auth\n})\n\nCommentForm.propTypes = {\n\tauth: PropTypes.object.isRequired,\n\tcomment: PropTypes.object.isRequired,\n\tdeleteComment: PropTypes.func.isRequired\n\t// postId: PropTypes.number.isRequired\n}\n\nexport default connect(mapStateToProps, {deleteComment})(CommentForm)"]},"metadata":{},"sourceType":"module"}