{"ast":null,"code":"var _jsxFileName = \"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Layout/Alert.js\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\"; // Destructure props.alerts\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Alert = ({\n  alerts\n}) => alerts !== null && alerts.length > 0 && alerts.map(alert => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: `alert alert-${alert.alertType}`,\n  children: alert.msg\n}, alert.id, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 2\n}, this)); // Give prop type\n\n\n_c = Alert;\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired\n}; // Make props.alerts available to the component\n\nconst mapStateToProps = state => ({\n  alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alert);\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Layout/Alert.js"],"names":["PropTypes","connect","Alert","alerts","length","map","alert","alertType","msg","id","propTypes","array","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CAEA;;;;AACA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgBA,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,MAAP,GAAgB,CAAnC,IAAwCD,MAAM,CAACE,GAAP,CAAWC,KAAK,iBACrF;AAAoB,EAAA,SAAS,EAAG,eAAcA,KAAK,CAACC,SAAU,EAA9D;AAAA,YACED,KAAK,CAACE;AADR,GAAUF,KAAK,CAACG,EAAhB;AAAA;AAAA;AAAA;AAAA,QADqE,CAAtE,C,CAOA;;;KAPMP,K;AAQNA,KAAK,CAACQ,SAAN,GAAkB;AACjBP,EAAAA,MAAM,EAAEH,SAAS,CAACW,KAAV,CAAgBC;AADP,CAAlB,C,CAIA;;AACA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AACjCX,EAAAA,MAAM,EAAEW,KAAK,CAACR;AADmB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACY,eAAD,CAAP,CAAyBX,KAAzB,CAAf","sourcesContent":["import PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\n\n// Destructure props.alerts\nconst Alert = ({ alerts }) => alerts !== null && alerts.length > 0 && alerts.map(alert => (\n\t<div key={alert.id} className={`alert alert-${alert.alertType}`}>\n\t\t{alert.msg}\n\t</div>\n))\n\n\n// Give prop type\nAlert.propTypes = {\n\talerts: PropTypes.array.isRequired\n}\n\n// Make props.alerts available to the component\nconst mapStateToProps = state => ({\n\talerts: state.alert\n})\n\nexport default connect(mapStateToProps)(Alert);"]},"metadata":{},"sourceType":"module"}