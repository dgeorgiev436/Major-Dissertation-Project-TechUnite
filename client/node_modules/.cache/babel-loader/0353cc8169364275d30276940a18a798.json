{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, ACCOUNT_DELETED, CLEAR_PROFILE, GET_PROFILES, GET_REPOSITORIES } from \"./types\"; // GET CURRENT USERS PROFILE\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/me\"); // \t\tSend the profile data to the state\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    // \t\tif there is error, send erorr message and status code to the state\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // GET ALL PROFILES\n\nexport const getProfiles = () => async dispatch => {\n  // dispatch({\n  // \ttype: CLEAR_PROFILE\n  // })\n  try {\n    const res = await axios.get(\"/api/profile\");\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // GET profile by ID \n\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // GET GITHUB REPOSITORIES\n\nexport const getGithubRepos = username => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`);\n    dispatch({\n      type: GET_REPOSITORIES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Create or update a profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    // \t\tSend POST requrest to the api end point\n    const res = await axios.post(\"/api/profile\", formData); // \t\tSend data to the reducer\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? \"Profile updated\" : \"Profile created\", \"success\"));\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // ADD EXPERIENCE\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    // \t\tSend a PUT requrest to the api end point\n    const res = await axios.put(\"/api/profile/experience\", formData); // \t\tSend data to the reducer\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Added\", \"success\"));\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // ADD Education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    // \t\tSend a PUT requrest to the api end point\n    const res = await axios.put(\"/api/profile/education\", formData); // \t\tSend data to the reducer\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education Added\", \"success\"));\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // DELETE EXPERIENCE\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // DELETE EDUCATION\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // DELETE ACCOUNT AND PROFILE\n\nexport const deleteAccount = () => async dispatch => {\n  // \tAsk the user for confirmation before deleting account\n  if (window.confirm(\"Are you sure? This can not be undone!\")) {\n    try {\n      await axios.delete(\"api/profile\");\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert(\"Your account has been permanently deleted\", \"success\"));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","ACCOUNT_DELETED","CLEAR_PROFILE","GET_PROFILES","GET_REPOSITORIES","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getProfiles","getProfileById","userId","getGithubRepos","username","createProfile","formData","history","edit","post","push","errors","forEach","error","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport {setAlert} from \"./alert\"\nimport {GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, ACCOUNT_DELETED, CLEAR_PROFILE, GET_PROFILES, GET_REPOSITORIES} from \"./types\"\n\n// GET CURRENT USERS PROFILE\nexport const getCurrentProfile = () => async dispatch => {\n\t\n\ttry{\n\t\tconst res = await axios.get(\"/api/profile/me\")\n// \t\tSend the profile data to the state\n\t\tdispatch({\n\t\t\ttype: GET_PROFILE,\n\t\t\tpayload: res.data\n\t\t})\n\t\t\n\t}catch(err){\n// \t\tif there is error, send erorr message and status code to the state\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status }\n\t\t})\n\t}\n}\n\n// GET ALL PROFILES\nexport const getProfiles = () => async dispatch => {\n\n\t// dispatch({\n\t// \ttype: CLEAR_PROFILE\n\t// })\n\t\n\ttry{\n\t\tconst res = await axios.get(\"/api/profile\");\n\t\t\n\t\tdispatch({\n\t\t\ttype: GET_PROFILES,\n\t\t\tpayload: res.data\n\t\t})\n\t}catch(err){\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status }\n\t\t})\n\t}\n}\n\n// GET profile by ID \nexport const getProfileById = (userId) => async dispatch => {\n\t\n\ttry{\n\t\tconst res = await axios.get(`/api/profile/user/${userId}`);\n\t\t\n\t\tdispatch({\n\t\t\ttype: GET_PROFILE,\n\t\t\tpayload: res.data\n\t\t})\n\t\t\n\t\t\n\t}catch(err){\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status }\n\t\t})\n\t}\n}\n\n// GET GITHUB REPOSITORIES\nexport const getGithubRepos = (username) => async dispatch => {\n\t\n\ttry{\n\t\tconst res = await axios.get(`/api/profile/github/${username}`);\n\t\t\n\t\tdispatch({\n\t\t\ttype: GET_REPOSITORIES,\n\t\t\tpayload: res.data\n\t\t})\n\t\t\n\t\t\n\t}catch(err){\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status }\n\t\t})\n\t}\n}\n\n\n// Create or update a profile\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n\t\n\ttry{\n// \t\tSend POST requrest to the api end point\n\t\tconst res = await axios.post(\"/api/profile\", formData);\n// \t\tSend data to the reducer\n\t\tdispatch({\n\t\t\ttype: GET_PROFILE,\n\t\t\tpayload: res.data\n\t\t});\n\t\t\n\t\tdispatch(setAlert(edit ? \"Profile updated\": \"Profile created\", \"success\"));\n\t\t\n\t\n\t\thistory.push(\"/dashboard\")\n\t\t\n\t\t\n\t}catch(err){\n\t\t\n\t\tconst errors = err.response.data.errors;\n\t\t\n\t\tif(errors){\n\t\t\terrors.forEach(error => dispatch(setAlert(error.msg, \"danger\")))\n\t\t}\n\t\t\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status }\n\t\t})\n\t}\n}\n\n// ADD EXPERIENCE\nexport const addExperience = (formData, history) => async dispatch => {\n\t\n\t\ttry{\n\t\t\n// \t\tSend a PUT requrest to the api end point\n\t\tconst res = await axios.put(\"/api/profile/experience\", formData);\n// \t\tSend data to the reducer\n\t\tdispatch({\n\t\t\ttype: UPDATE_PROFILE,\n\t\t\tpayload: res.data\n\t\t});\n\t\t\n\t\tdispatch(setAlert(\"Experience Added\", \"success\"));\n\t\t\n\t\n\t\thistory.push(\"/dashboard\")\n\t\t\n\t\t\n\t}catch(err){\n\t\t\n\t\tconst errors = err.response.data.errors;\n\t\t\n\t\tif(errors){\n\t\t\terrors.forEach(error => dispatch(setAlert(error.msg, \"danger\")))\n\t\t}\n\t\t\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status }\n\t\t})\n\t}\n\t\n}\n\n// ADD Education\nexport const addEducation= (formData, history) => async dispatch => {\n\t\n\t\ttry{\n\t\t\n// \t\tSend a PUT requrest to the api end point\n\t\tconst res = await axios.put(\"/api/profile/education\", formData);\n// \t\tSend data to the reducer\n\t\tdispatch({\n\t\t\ttype: UPDATE_PROFILE,\n\t\t\tpayload: res.data\n\t\t});\n\t\t\n\t\tdispatch(setAlert(\"Education Added\", \"success\"));\n\t\t\n\t\n\t\thistory.push(\"/dashboard\")\n\t\t\n\t\t\n\t}catch(err){\n\t\t\n\t\tconst errors = err.response.data.errors;\n\t\t\n\t\tif(errors){\n\t\t\terrors.forEach(error => dispatch(setAlert(error.msg, \"danger\")))\n\t\t}\n\t\t\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status }\n\t\t})\n\t}\n\t\n}\n\n// DELETE EXPERIENCE\nexport const deleteExperience = (id) => async dispatch => {\n\t\n\ttry{\n\t\tconst res = await axios.delete(`/api/profile/experience/${id}`)\n\t\t\n\t\tdispatch({\n\t\t\ttype: UPDATE_PROFILE,\n\t\t\tpayload: res.data\n\t\t})\n\t\t\n\t\tdispatch(setAlert(\"Experience Removed\", \"success\"));\n\t\t\n\t}catch(err){\n\t\t\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status }\n\t\t})\n\t}\n}\n\n// DELETE EDUCATION\nexport const deleteEducation = (id) => async dispatch => {\n\t\n\ttry{\n\t\tconst res = await axios.delete(`/api/profile/education/${id}`)\n\t\t\n\t\tdispatch({\n\t\t\ttype: UPDATE_PROFILE,\n\t\t\tpayload: res.data\n\t\t})\n\t\t\n\t\tdispatch(setAlert(\"Education Removed\", \"success\"));\n\t\t\n\t}catch(err){\n\t\t\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status }\n\t\t})\n\t}\n}\n\n// DELETE ACCOUNT AND PROFILE\nexport const deleteAccount = () => async dispatch => {\n// \tAsk the user for confirmation before deleting account\n\tif(window.confirm(\"Are you sure? This can not be undone!\")){\n\t\t\n\t\ttry{\n\t\t\tawait axios.delete(\"api/profile\")\n\n\t\t\tdispatch({\n\t\t\t\ttype: CLEAR_PROFILE\n\t\t\t})\n\t\t\tdispatch({\n\t\t\t\ttype: ACCOUNT_DELETED\n\t\t\t})\n\n\t\t\tdispatch(setAlert(\"Your account has been permanently deleted\", \"success\"));\n\n\t\t}catch(err){\n\n\t\t\tdispatch({\n\t\t\t\ttype: PROFILE_ERROR,\n\t\t\t\tpayload: { msg: err.response.statusText, status: err.response.status }\n\t\t\t})\n\t\t}\t\n\t\t\n\t}\n}\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}