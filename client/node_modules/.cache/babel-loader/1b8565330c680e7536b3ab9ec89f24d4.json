{"ast":null,"code":"import { GET_PROFILE, PROFILE_ERROR, CLEAR_PROFILE, UPDATE_PROFILE, GET_PROFILES, GET_REPOSITORIES } from \"../actions/types\";\nconst initialState = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action; // \tHandling actions\n\n  switch (type) {\n    case UPDATE_PROFILE:\n    case GET_PROFILE:\n      return { ...state,\n        profile: payload,\n        loading: false\n      };\n\n    case PROFILE_ERROR:\n      return { ...state,\n        profile: null,\n        error: payload,\n        loading: false\n      };\n\n    case CLEAR_PROFILE:\n      return { ...state,\n        profile: null,\n        repos: [],\n        loading: false\n      };\n\n    case GET_PROFILES:\n      return { ...state,\n        profiles: payload,\n        loading: false\n      };\n\n    case GET_REPOSITORIES:\n      return { ...state,\n        repos: payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/reducers/profile.js"],"names":["GET_PROFILE","PROFILE_ERROR","CLEAR_PROFILE","UPDATE_PROFILE","GET_PROFILES","GET_REPOSITORIES","initialState","profile","profiles","repos","loading","error","state","action","type","payload"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,aAArB,EAAoCC,aAApC,EAAmDC,cAAnD,EAAmEC,YAAnE,EAAiFC,gBAAjF,QAAwG,kBAAxG;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,OAAO,EAAE,IADW;AAEpBC,EAAAA,QAAQ,EAAE,EAFU;AAGpBC,EAAAA,KAAK,EAAE,EAHa;AAIpBC,EAAAA,OAAO,EAAE,IAJW;AAKpBC,EAAAA,KAAK,EAAE;AALa,CAArB;AAQA,eAAe,UAASC,KAAK,GAAGN,YAAjB,EAA+BO,MAA/B,EAAsC;AACpD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B,CADoD,CAErD;;AACC,UAAOC,IAAP;AACC,SAAKX,cAAL;AACA,SAAKH,WAAL;AACC,aAAO,EAAC,GAAGY,KAAJ;AAAWL,QAAAA,OAAO,EAAEQ,OAApB;AAA6BL,QAAAA,OAAO,EAAE;AAAtC,OAAP;;AACD,SAAKT,aAAL;AACC,aAAO,EAAC,GAAGW,KAAJ;AAAUL,QAAAA,OAAO,EAAE,IAAnB;AAAyBI,QAAAA,KAAK,EAAEI,OAAhC;AAAyCL,QAAAA,OAAO,EAAE;AAAlD,OAAP;;AACD,SAAKR,aAAL;AACC,aAAO,EAAC,GAAGU,KAAJ;AAAWL,QAAAA,OAAO,EAAE,IAApB;AAAyBE,QAAAA,KAAK,EAAE,EAAhC;AAAoCC,QAAAA,OAAO,EAAE;AAA7C,OAAP;;AACD,SAAKN,YAAL;AACC,aAAO,EAAC,GAAGQ,KAAJ;AAAWJ,QAAAA,QAAQ,EAAEO,OAArB;AAA8BL,QAAAA,OAAO,EAAE;AAAvC,OAAP;;AACD,SAAKL,gBAAL;AACC,aAAO,EAAC,GAAGO,KAAJ;AAAWH,QAAAA,KAAK,EAAEM,OAAlB;AAA2BL,QAAAA,OAAO,EAAE;AAApC,OAAP;;AACD;AACC,aAAOE,KAAP;AAbF;AAeA","sourcesContent":["import {GET_PROFILE, PROFILE_ERROR, CLEAR_PROFILE, UPDATE_PROFILE, GET_PROFILES, GET_REPOSITORIES} from \"../actions/types\"\n\nconst initialState = {\n\tprofile: null,\n\tprofiles: [],\n\trepos: [],\n\tloading: true,\n\terror: {}\n}\n\nexport default function(state = initialState, action){\n\tconst { type, payload } = action;\n// \tHandling actions\n\tswitch(type){\n\t\tcase UPDATE_PROFILE:\n\t\tcase GET_PROFILE:\n\t\t\treturn {...state, profile: payload, loading: false};\n\t\tcase PROFILE_ERROR:\n\t\t\treturn {...state,profile: null, error: payload, loading: false};\n\t\tcase CLEAR_PROFILE:\n\t\t\treturn {...state, profile: null,repos: [], loading: false}\n\t\tcase GET_PROFILES:\n\t\t\treturn {...state, profiles: payload, loading: false}\n\t\tcase GET_REPOSITORIES:\n\t\t\treturn {...state, repos: payload, loading: false}\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}