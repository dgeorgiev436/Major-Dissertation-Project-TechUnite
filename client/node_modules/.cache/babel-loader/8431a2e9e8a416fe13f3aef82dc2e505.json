{"ast":null,"code":"var _jsxFileName = \"/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Profile/ProfileGithub.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"../Layout/Spinner\";\nimport { getGithubRepos } from \"../../actions/profile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileGithub = ({\n  username,\n  getGithubRepos,\n  repos\n}) => {\n  _s();\n\n  useEffect(() => {\n    getGithubRepos(username);\n    console.log(repos);\n  }, [getGithubRepos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-github\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \" my-1\",\n      children: \"Github Repositories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this), repos === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 22\n    }, this) : repos.map(repo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repo bg-white p-1 my-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: repo.html_url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: repo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: repo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-primary\",\n            children: [\"Stars: \", repo.stargazers_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-dark\",\n            children: [\"Watchers: \", repo.watchers_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-light\",\n            children: [\"Forks: \", repo.forks_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 6\n      }, this)]\n    }, repo._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ProfileGithub, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ProfileGithub;\n\nconst mapPropsToState = state => ({\n  repos: state.profile.repos\n});\n\nProfileGithub.propTypes = {\n  username: PropTypes.string.isRequired,\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired\n};\nexport default connect(mapPropsToState, {\n  getGithubRepos\n})(ProfileGithub);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileGithub\");","map":{"version":3,"sources":["/workspace/MERN/TechUnite/Dev-Social-Platform-Project-MERN-Stack/client/src/components/Profile/ProfileGithub.js"],"names":["React","useEffect","connect","PropTypes","Spinner","getGithubRepos","ProfileGithub","username","repos","console","log","map","repo","html_url","name","description","stargazers_count","watchers_count","forks_count","_id","mapPropsToState","state","profile","propTypes","string","isRequired","func","array"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWF,EAAAA,cAAX;AAA2BG,EAAAA;AAA3B,CAAD,KAAuC;AAAA;;AAE5DP,EAAAA,SAAS,CAAC,MAAM;AAEfI,IAAAA,cAAc,CAACE,QAAD,CAAd;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,GALQ,EAKN,CAACH,cAAD,CALM,CAAT;AAOA,sBACC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACC;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAEEG,KAAK,KAAK,IAAV,gBAAiB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAjB,GACAA,KAAK,CAACG,GAAN,CAAUC,IAAI,iBACd;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,8BACC;AAAA,gCACC;AAAA,iCACC;AAAG,YAAA,IAAI,EAAEA,IAAI,CAACC,QAAd;AAAwB,YAAA,MAAM,EAAC,QAA/B;AAAwC,YAAA,GAAG,EAAC,qBAA5C;AAAA,sBACED,IAAI,CAACE;AADP;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADD,eAMC;AAAA,oBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,gBAND;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eASC;AAAA,+BACC;AAAA,kCACC;AAAI,YAAA,SAAS,EAAC,qBAAd;AAAA,kCACSH,IAAI,CAACI,gBADd;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAIC;AAAI,YAAA,SAAS,EAAC,kBAAd;AAAA,qCACYJ,IAAI,CAACK,cADjB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJD,eAOC;AAAI,YAAA,SAAS,EAAC,mBAAd;AAAA,kCACSL,IAAI,CAACM,WADd;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cATD;AAAA,OAA6CN,IAAI,CAACO,GAAlD;AAAA;AAAA;AAAA;AAAA,YADA,CAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAgCA,CAzCD;;GAAMb,a;;KAAAA,a;;AA2CN,MAAMc,eAAe,GAAGC,KAAK,KAAK;AACjCb,EAAAA,KAAK,EAAEa,KAAK,CAACC,OAAN,CAAcd;AADY,CAAL,CAA7B;;AAIAF,aAAa,CAACiB,SAAd,GAA0B;AACzBhB,EAAAA,QAAQ,EAAEJ,SAAS,CAACqB,MAAV,CAAiBC,UADF;AAEzBpB,EAAAA,cAAc,EAAEF,SAAS,CAACuB,IAAV,CAAeD,UAFN;AAGzBjB,EAAAA,KAAK,EAAEL,SAAS,CAACwB,KAAV,CAAgBF;AAHE,CAA1B;AAMA,eAAevB,OAAO,CAACkB,eAAD,EAAkB;AAACf,EAAAA;AAAD,CAAlB,CAAP,CAA2CC,aAA3C,CAAf","sourcesContent":["import React, {useEffect} from \"react\"\nimport {connect} from \"react-redux\"\nimport PropTypes from \"prop-types\"\nimport Spinner from \"../Layout/Spinner\"\nimport { getGithubRepos } from \"../../actions/profile\"\n\nconst ProfileGithub = ({username, getGithubRepos, repos}) => {\n\t\n\tuseEffect(() => {\n\t\t\n\t\tgetGithubRepos(username);\n\t\tconsole.log(repos);\n\t\t\n\t}, [getGithubRepos]);\n\t\n\treturn(\n\t\t<div className=\"profile-github\">\n\t\t\t<h2 className=\" my-1\">Github Repositories</h2>\n\t\t\t{repos === null ? <Spinner/> : (\n\t\t\t\trepos.map(repo => (\n\t\t\t\t<div className=\"repo bg-white p-1 my-1\" key={repo._id}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\t<a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\t{repo.name}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</h4>\t\n\t\t\t\t\t\t<p>{repo.description}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li className=\"badge badge-primary\">\n\t\t\t\t\t\t\t\tStars: {repo.stargazers_count}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li className=\"badge badge-dark\">\n\t\t\t\t\t\t\t\tWatchers: {repo.watchers_count}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li className=\"badge badge-light\">\n\t\t\t\t\t\t\t\tForks: {repo.forks_count}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t))\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nconst mapPropsToState = state => ({\n\trepos: state.profile.repos\n})\n\nProfileGithub.propTypes = {\n\tusername: PropTypes.string.isRequired,\n\tgetGithubRepos: PropTypes.func.isRequired,\n\trepos: PropTypes.array.isRequired\n}\n\nexport default connect(mapPropsToState, {getGithubRepos})(ProfileGithub)"]},"metadata":{},"sourceType":"module"}